service: bonuscalc-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: dotnet6
  memorySize: 2048
  tracing:
    lambda: true
    apiGateway: true
  vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  region: eu-west-2
  apiKeys:
    - secureAccess:
      - api-key-${self:service}-${self:provider.stage}
  usagePlan:
    - secureAccess:
        throttle:
          burstLimit: 200
          rateLimit: 100

package:
  artifact: ./bin/release/net6.0/bonuscalc-api.zip

functions:
  BonusCalcApi:
    name: ${self:service}-${self:provider.stage}
    handler: BonusCalcApi::BonusCalcApi.LambdaEntryPoint::FunctionHandlerAsync
    role: lambdaExecutionRole
    environment:
      CONNECTION_STRING: Host=${ssm:/bonuscalc-api/${self:provider.stage}/postgres-hostname};Port=${ssm:/bonuscalc-api/${self:provider.stage}/postgres-port};Database=${ssm:/bonuscalc-api/${self:provider.stage}/postgres-database};Username=${ssm:/bonuscalc-api/${self:provider.stage}/postgres-username};Password=${ssm:/bonuscalc-api/${self:provider.stage}/postgres-password}
      PGTZ: UTC
      OperativeGatewayOptions__RepairsHubBaseAddr: ${ssm:/bonuscalc-api/${self:provider.stage}/repairs-hub-base-api}
      OperativeGatewayOptions__RepairsHubApiKey: ${ssm:/bonuscalc-api/${self:provider.stage}/repairs-hub-api-key}
      SENTRY_DSN: ${ssm:/bonuscalc-api/${self:provider.stage}/sentry-dsn}
      SENTRY_RELEASE: ${env:CIRCLE_SHA1}
      SENTRY_ENVIRONMENT: ${self:provider.stage}
    events:
      - http:
          path: /{proxy+}
          method: ANY
          private: true
      - http:
          path: /swagger/{proxy+}
          method: GET
          private: false

resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"

custom:
  vpc:
    staging:
      subnetIds:
        - subnet-0ea0020a44b98a2ca # housing-stg-private-eu-west-2a
        - subnet-0743d86e9b362fa38 # housing-stg-private-eu-west-2b
      securityGroupIds:
        - sg-0292b24504fdce1eb # allow_bonuscalc_db_traffic
    production:
      subnetIds:
        - subnet-06a697d86a9b6ed01 # housing-prod-private-eu-west-2a
        - subnet-0beb266003a56ca82 # housing-prod-private-eu-west-2b
      securityGroupIds:
        - sg-064b1c3ec1577380b # allow_bonuscalc_db_traffic
