// <auto-generated />
using System;
using BonusCalcApi.V1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace V1.Infrastructure.Migrations
{
    [DbContext(typeof(BonusCalcContext))]
    [Migration("20211012104638_NonProductiveTime")]
    partial class NonProductiveTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BonusCalcApi.V1.Infrastructure.NonProductiveTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateOfWork")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_work");

                    b.Property<DateTime>("DateRecorded")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_recorded");

                    b.Property<double>("Hours")
                        .HasColumnType("double precision")
                        .HasColumnName("hours");

                    b.Property<double>("StandardMinuteValue")
                        .HasColumnType("double precision")
                        .HasColumnName("standard_minute_value");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_non_productive_times");

                    b.ToTable("non_productive_times");
                });

            modelBuilder.Entity("BonusCalcApi.V1.Infrastructure.Operative", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<bool>("FixedBand")
                        .HasColumnType("boolean")
                        .HasColumnName("fixed_band");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archived");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("SalaryBand")
                        .HasColumnType("integer")
                        .HasColumnName("salary_band");

                    b.Property<string>("Scheme")
                        .HasColumnType("text")
                        .HasColumnName("scheme");

                    b.Property<string>("Section")
                        .HasColumnType("text")
                        .HasColumnName("section");

                    b.Property<string>("Trade")
                        .HasColumnType("text")
                        .HasColumnName("trade");

                    b.HasKey("Id")
                        .HasName("pk_operatives");

                    b.ToTable("operatives");
                });
#pragma warning restore 612, 618
        }
    }
}
